// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package sqlc

import (
	"context"
	"database/sql"
)

const getBar = `-- name: GetBar :many
SELECT
    id
    ,bar
FROM foo
`

func (q *Queries) GetBar(ctx context.Context) ([]Foo, error) {
	rows, err := q.db.QueryContext(ctx, getBar)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Foo
	for rows.Next() {
		var i Foo
		if err := rows.Scan(&i.ID, &i.Bar); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const newBar = `-- name: NewBar :exec
INSERT INTO foo (bar)
VALUES (?)
`

func (q *Queries) NewBar(ctx context.Context, bar sql.NullString) error {
	_, err := q.db.ExecContext(ctx, newBar, bar)
	return err
}
